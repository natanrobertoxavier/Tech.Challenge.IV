name: CI/CD for Microservices in Monorepo

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    name: Build, Test, and Publish Docker Images for Changed Services
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Replace appsettings for Ocelot
        if: contains(github.event.head_commit.message, 'ocelot')
        run: |
          echo "Replacing appsettings for Ocelot"
          cp -f /home/natan/appsettings/appsettings.json ${{ github.workspace }}/Tech.Challenge.III.Ocelot/Tech.Challenge.Api.Gateway/Tech.Challenge.Api.Gateway/appsettings.json

      - name: Restore dependencies
        if: contains(github.event.head_commit.message, 'ocelot')
        run: |
          echo "Restoring dependencies for Ocelot"
          cd Tech.Challenge.III.Ocelot/Tech.Challenge.Api.Gateway/
          dotnet restore

      - name: Build the Ocelot project
        if: contains(github.event.head_commit.message, 'ocelot')
        run: |
          echo "Building the Ocelot project"
          dotnet build --configuration Release

      - name: Login to Docker Hub
        if: contains(github.event.head_commit.message, 'ocelot')
        run: |
          echo "Logging into Docker Hub"
          echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build and Push Docker Image for Ocelot
        if: contains(github.event.head_commit.message, 'ocelot')
        run: |
          echo "Building and pushing Docker image for Ocelot"
          IMAGE_NAME="natanroberto182/ocelot:latest"
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME

  notify-config-repo:
    name: Notify Configurations Repository
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Set the list of services to notify
        id: services
        run: |
          echo "Determining which services were built successfully"
          services=()
          if [[ "${{ steps.build-and-push.outcome }}" == "success" && contains(github.event.head_commit.message, 'ocelot') ]]; then
            services+=("ocelot")
          fi
          echo "Services to notify: ${services[@]}"
          echo "::set-output name=services::${services[@]}"

      - name: Notify Configurations Repository
        if: steps.services.outputs.services != ''
        run: |
          echo "Notifying configuration repository"
          curl -X POST \
            -H "Accept: application/vnd.github.everest-preview+json" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -d '{"event_type": "update-configurations", "client_payload": {"services": ["${{ steps.services.outputs.services }}"]}}' \
            https://api.github.com/repos/natanroberto182/config-repo/dispatches
