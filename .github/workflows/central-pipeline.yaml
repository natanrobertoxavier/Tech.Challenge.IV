name: Central Pipeline

on:
  push:
    branches:
      - main

jobs:
  identify_and_trigger:
    runs-on: NOTEBOOK-NATAN
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # - name: Obter mensagem do commit
      #   run: cmd /c "echo MESSAGE=$(git log -1 --pretty=%B) >> %GITHUB_ENV%"

      # - name: Definir política de execução temporária
      #   run: powershell -ExecutionPolicy Bypass -command "echo 'Política ajustada temporariamente'"

      - name: Obter mensagem de commit
        id: commit_message
        run: echo "MESSAGE=$(git log -1 --pretty=%B)" >> $GITHUB_ENV

      # - name: Identificar e disparar a pipeline do projeto
      #   run: |
      #     if echo "$MESSAGE" | grep -q "ocelot"; then
      #       echo "Executando workflow Ocelot"
      #       gh workflow run ocelot.yaml
      #     elif echo "$MESSAGE" | grep -q "user-query"; then
      #       echo "Executando workflow User Query"
      #       gh workflow run user-query.yaml
      #     elif echo "$MESSAGE" | grep -q "user-login"; then
      #       echo "Executando workflow User Login"
      #       gh workflow run user-login.yaml
      #     elif echo "$MESSAGE" | grep -q "tech-challenge-persistence"; then
      #       echo "Executando workflow Tech Challenge Persistence"
      #       gh workflow run persistence.yaml
      #     else
      #       echo "Nenhum workflow correspondente encontrado."
      #     fi

      - name: Executar script
        run: |
          if ($env:MESSAGE -match "ocelot") {
            Write-Output "Executando workflow Ocelot"
            gh workflow run ocelot.yaml
          } elseif ($env:MESSAGE -match "user-query") {
            Write-Output "Executando workflow User Query"
            gh workflow run user-query.yaml
          } elseif ($env:MESSAGE -match "user-login") {
            Write-Output "Executando workflow User Login"
            gh workflow run user-login.yaml
          } elseif ($env:MESSAGE -match "tech-challenge-persistence") {
            Write-Output "Executando workflow Tech Challenge Persistence"
            gh workflow run persistence.yaml
          } else {
            Write-Output "Nenhum workflow correspondente encontrado."
          }
        shell: powershell
      
        env: 
          GH_TOKEN: ${{ secrets.CONFIG_REPO_TOKEN }}
          
