name: CI/CD for User Persistence

on:
  workflow_dispatch:

jobs:
  build-and-push:
    name: Build, Test, and Publish Docker Image - User Persistence
    runs-on: NOTEBOOK-NATAN

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Replace appsettings for User Persistence
        run: |
          echo "Replacing appsettings for User Persistence"
          cmd /C "copy /Y c:\appsettings\appsettings.json %GITHUB_WORKSPACE%\Tech.Challenge.III.User.Persistence\User.Persistence\User.Persistence.Api\appsettings.json"
          cmd /C "copy /Y c:\appsettings\appsettings.Test.json %GITHUB_WORKSPACE%\Tech.Challenge.III.User.Persistence\User.Persistence\User.Persistence.Api\appsettings.Test.json"
          cmd /C "copy /Y c:\appsettings\appsettings.IntegrationTests.json %GITHUB_WORKSPACE%\Tech.Challenge.III.User.Persistence\User.Persistence\User.Persistence.Api\appsettings.IntegrationTests.json"

      - name: Restore dependencies
        run: |
          echo "Restoring dependencies for User Persistence"
          cd Tech.Challenge.III.User.Persistence/User.Persistence/
          dotnet restore

      - name: Build the User Persistence
        run: |
          echo "Building the User Persistence"
          dotnet build Tech.Challenge.III.User.Persistence/User.Persistence/User.Persistence.sln --no-restore --configuration Release

      - name: Run unit tests
        run: |
          echo "Running unit tests"
          dotnet test Tech.Challenge.III.User.Persistence/User.Persistence/User.Persistence.Tests/User.Persistence.Tests.csproj --no-build --configuration Release --logger "trx;LogFileName=unit-test-user-persistence-results.trx"

      - name: Run integration tests
        run: |
          echo "Running integration tests"
          dotnet test Tech.Challenge.III.User.Persistence/User.Persistence/User.Persistence.Integration.Tests/User.Persistence.Integration.Tests.csproj --no-build --configuration Release --logger "trx;LogFileName=integration-test-user-persistence-results.trx"

      - name: Login to Docker Hub
        run: |
          echo "Logging into Docker Hub"
          $env:DOCKERHUB_PASSWORD="${{ secrets.DOCKERHUB_PASSWORD }}"
          $env:DOCKERHUB_USERNAME="${{ secrets.DOCKERHUB_USERNAME }}"
          echo "Username: $env:DOCKERHUB_USERNAME"
          echo "Password: $env:DOCKERHUB_PASSWORD"
          docker login -u $env:DOCKERHUB_USERNAME -p $env:DOCKERHUB_PASSWORD

      - name: Build and Push Docker Image for User Persistence
        run: |
          echo "Building and pushing Docker image for User Persistence"
          cd Tech.Challenge.III.User.Persistence/User.Persistence/
          $IMAGE_NAME="natanroberto182/user-persistence:latest"
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME

      - name: Logout from Docker Hub
        run: docker logout

  notify-config-repo:
    name: Notify Configurations Repository
    runs-on: NOTEBOOK-NATAN
    needs: build-and-push

    steps:
      - name: Set the list of services to notify
        id: services
        run: |
          echo "Determining which services were built successfully"
          $services="user-persistence"
          echo "Services to notify: $services"
          echo "services=$services" >> $GITHUB_OUTPUT

      - name: Notify Configuration Repository
        run: |
          curl.exe -X POST ^
            -H "Accept: application/vnd.github.everest-preview+json" ^
            -H "Authorization: token ${{ secrets.CONFIG_REPO_TOKEN }}" ^
            -d "{\"event_type\": \"update-configurations\", \"client_payload\": {\"services\": \"user-persistence\"}}" ^
            https://api.github.com/repos/natanrobertoxavier/Tech.Challenge.III.Config.Repo/dispatches
        shell: cmd
