name: CI/CD for Ocelot

on:
  workflow_dispatch:

jobs:
  build-and-push:
    name: Build, Test, and Publish Docker Images for Changed Services
    runs-on: NOTEBOOK-NATAN

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Replace appsettings for Ocelot
        run: |
          echo "Replacing appsettings for Ocelot"
          cmd /C "copy /Y c:\appsettings\ocelot\appsettings.json %GITHUB_WORKSPACE%\Tech.Challenge.III.Ocelot\Tech.Challenge.Api.Gateway\Tech.Challenge.Api.Gateway\appsettings.json"

      - name: Restore dependencies
        run: |
          echo "Restoring dependencies for Ocelot"
          cd Tech.Challenge.III.Ocelot/Tech.Challenge.Api.Gateway/
          dotnet restore

      - name: Build the Ocelot project
        run: |
          echo "Building the Ocelot project"
          cd Tech.Challenge.III.Ocelot/Tech.Challenge.Api.Gateway/
          dotnet build --configuration Release

      - name: Test Docker Hub Login with curl
        run: |
          echo "Testing connection to Docker Hub"
          set DOCKERHUB_PASSWORD=${{ secrets.DOCKERHUB_PASSWORD }}
          set DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}
          echo "Username: %DOCKERHUB_USERNAME%"
          echo "Password: %DOCKERHUB_PASSWORD%"
          
          curl.exe -u %DOCKERHUB_USERNAME%:%DOCKERHUB_PASSWORD% https://index.docker.io/v1/

      - name: Login to Docker Hub with PowerShell
        run: |
          echo "Logging into Docker Hub"
          $env:DOCKERHUB_PASSWORD="${{ secrets.DOCKERHUB_PASSWORD }}"
          $env:DOCKERHUB_USERNAME="${{ secrets.DOCKERHUB_USERNAME }}"
          echo "Username: $env:DOCKERHUB_USERNAME"
          echo "Password: $env:DOCKERHUB_PASSWORD"
          docker login -u $env:DOCKERHUB_USERNAME --password-stdin <<< $env:DOCKERHUB_PASSWORD

      # - name: Login to Docker Hub
      #   run: |
      #     echo "Logging into Docker Hub"
      #     set DOCKERHUB_PASSWORD=${{ secrets.DOCKERHUB_PASSWORD }}
      #     set DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}
      #     echo %DOCKERHUB_PASSWORD% | docker login -u %DOCKERHUB_USERNAME% --password-stdin

      - name: Build and Push Docker Image for Ocelot
        run: |
          echo "Building and pushing Docker image for Ocelot"
          cd Tech.Challenge.III.Ocelot/Tech.Challenge.Api.Gateway/
          IMAGE_NAME="natanroberto182/ocelot:latest"
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME

  notify-config-repo:
    name: Notify Configurations Repository
    runs-on: self-hosted
    needs: build-and-push

    steps:
      - name: Set the list of services to notify
        id: services
        run: |
          echo "Determining which services were built successfully"
          services="ocelot"
          echo "Services to notify: $services"
          echo "services=$services" >> $GITHUB_OUTPUT

      - name: Notify Configuration Repository
        run: |
          curl -X POST \
            -H "Accept: application/vnd.github.everest-preview+json" \
            -H "Authorization: token ${{ secrets.CONFIG_REPO_TOKEN }}" \
            -d '{"event_type": "update-configurations", "client_payload": {"services": "ocelot"}}' \
            https://api.github.com/repos/natanrobertoxavier/Tech.Challenge.III.Config.Repo/dispatches